<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2015 Cisco Systems, Inc. and others. All rights reserved. 
  This program and the accompanying materials are made available under the 
  terms of the Eclipse Public License v1.0 which accompanies this distribution, 
  and is available at http://www.eclipse.org/legal/epl-v10.html -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opendaylight.groupbasedpolicy</groupId>
    <artifactId>groupbasedpolicy-renderers</artifactId>
    <version>0.2.5-SNAPSHOT</version>
    <relativePath>../</relativePath>
  </parent>

  <artifactId>ofoverlay-renderer</artifactId>
  <packaging>bundle</packaging>

  <dependencies>
    <!-- model dependencies -->
    <dependency>
      <groupId>org.opendaylight.yangtools.model</groupId>
      <artifactId>yang-ext</artifactId>
    </dependency>
  <dependency>
    <groupId>org.opendaylight.ovsdb</groupId>
    <artifactId>southbound-api</artifactId>
  </dependency>

    <!-- project specific dependencies -->
    <dependency>
      <groupId>org.opendaylight.openflowplugin</groupId>
      <artifactId>openflowplugin-extension-nicira</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.controller</groupId>
      <artifactId>liblldp</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
    </dependency>
    <!-- SFC -->
    <dependency>
      <groupId>org.opendaylight.sfc</groupId>
      <artifactId>sfc-model</artifactId>
      <version>${sfc.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.sfc</groupId>
      <artifactId>sfc-provider</artifactId>
      <version>${sfc.version}</version>
    </dependency>
    <!-- testing dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Sonar -->
    <dependency>
      <groupId>org.codehaus.sonar-plugins.java</groupId>
      <artifactId>sonar-jacoco-listeners</artifactId>
      <version>${sonar-jacoco-listeners.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- project build -->
  <build>
    <!-- We use the maven-resources-plugin to copy a class from the groupbasepolicy 
      bundle that we need in order to run some unit tests in the renderer (classes 
      in the test directory aren't packaged in bundles, and instead of keeping 
      separate copies, we just copy the file(s) needed in order to run the test). -->
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>src/test/java/org/opendaylight/groupbasedpolicy/resolver</outputDirectory>
              <resources>
                <resource>
                  <directory>../../groupbasedpolicy/src/test/java/org/opendaylight/groupbasedpolicy/resolver</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Export-Package>
              org.opendaylight.groupbasedpolicy.renderer.ofoverlay.sf,
              org.opendaylight.yang.gen.v1.urn.opendaylight.groupbasedpolicy.ofoverlay.rev140528.*
            </Export-Package>
          </instructions>
          <manifestLocation>${project.basedir}/META-INF</manifestLocation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.opendaylight.yangtools</groupId>
        <artifactId>yang-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>prepare-ut-agent</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${sonar.jacoco.reportPath}</destFile>
            </configuration>
          </execution>
          <execution>
            <id>prepare-it-agent</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${sonar.jacoco.itReportPath}</destFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <versionRange>[0.6,)</versionRange>
                    <goals>
                      <goal>prepare-agent</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
	      </pluginExecutions>
            </lifecycleMappingMetadata>
	  </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>

